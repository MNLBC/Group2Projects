/*
 * File: app/controller/loginController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MedicineInvoicingSystem.controller.loginController', {
    extend: 'Ext.app.Controller',

    control: {
        "#btnregister": {
            click: 'onRegisterClick'
        },
        "#btnlogin": {
            click: 'onLoginClick'
        },
        "#btncancel": {
            click: 'onCancelClick'
        },
        "#btncreateacct": {
            click: 'onCreateAcctClick'
        },
        "#btncreatemed": {
            click: 'onCreateMedClick'
        },
        "#savemed": {
            click: 'onSaveMedClick'
        }
    },

    onRegisterClick: function(button, e, eOpts) {

        var registerwin = Ext.create('MedicineInvoicingSystem.view.registrationWindow');
        registerwin.show();
    },

    onLoginClick: function(button, e, eOpts) {
        var username = Ext.getCmp('textboxUsername').getValue();
        var password = Ext.getCmp('textboxPassword').getValue();
        var userStore = Ext.getStore("userStore");
        var isValid = false;
        Ext.each(userStore.data.items, function(data){
            if(data.data.username == username && data.data.password == password){
                if(data.data.accountType == "Customer"){
                    var customerview = Ext.create('MedicineInvoicingSystem.view.customerViewport');
                    customerview.show();
                    isValid = true;
                }
                else if(data.data.accountType == "Pharmacist"){
                    var pharmacistview = Ext.create('MedicineInvoicingSystem.view.pharmacistViewport');
                    pharmacistview.show();
                    isValid = true;
                }
            }
        });

        if(isValid == false){
         Ext.Msg.alert('Warning','Invalid Account');
        }

    },

    onCancelClick: function(button, e, eOpts) {
        // var loginview = Ext.create('MedicineInvoicingSystem.view.loginViewport');
        // loginview.show();
        Ext.getCmp('registerwin').close();

    },

    onCreateAcctClick: function(button, e, eOpts) {
        var name, email, accttype, username, password, store, userObj, form;
        name = Ext.getCmp('fullname').getValue();
        email = Ext.getCmp('email').getValue();
        accttype = Ext.getCmp('accttype').getValue();
        username = Ext.getCmp('createuname').getValue();
        password = Ext.getCmp('createpword').getValue();
        store = Ext.getStore('userStore');
        form = Ext.getCmp('registrationForm');
        userObj = [{
            fullName: name,
            email: email,
            accountType: accttype,
            username: username,
            password: password
        }];

        if(form.isValid()){
        store.add(userObj);
        Ext.getCmp('registerwin').close();
        Ext.Msg.alert('Succes', 'Register Successful!');
        }else{
            Ext.Msg.alert('Warning', 'Please input required fields');
        }

    },

    onCreateMedClick: function(button, e, eOpts) {
        var btnsavemed, medform;
        btnsavemed = Ext.getCmp('savemed');
        medform = Ext.getCmp('medform');
        medform.getForm().reset();
        btnsavemed.show();

    },

    onSaveMedClick: function(button, e, eOpts) {
        var id, medname, brandname, price, quantity, expdate, store, medObj, medform;
        medname = Ext.getCmp('textmedname').getValue();
        brandname = Ext.getCmp('textbrandname').getValue();
        price = Ext.getCmp('textprice').getValue();
        quantity = Ext.getCmp('textquantity').getValue();
        expdate = Ext.getCmp('textexpdate').getValue();
        store = Ext.getStore('medicineStore');
        id = store.data.items.length;
        form = Ext.getCmp('medform');
        medObj = [{
            id : id,
            medicineName: medname,
            brandName: brandname,
            price: price,
            quantity: quantity,
            expiryDate: expdate
        }];

        if(form.isValid()){
        store.add(medObj);
        Ext.Msg.alert('Success', 'Medicine added successfully!');
        Ext.getCmp('savemed').hide();
        console.log(store);
        }else{
            Ext.Msg.alert('Warning', 'Please input required fields');
        }
    }

});
