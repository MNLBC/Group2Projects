/*
 * File: app/controller/controllerMain.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.controller.controllerMain', {
    extend: 'Ext.app.Controller',

    id: 'controllerMain',

    refs: [
        {
            ref: 'containerPanel1',
            selector: '#containerPanel1'
        },
        {
            ref: 'containerPanel2',
            selector: '#containerPanel2'
        },
        {
            ref: 'containerPanel3',
            selector: '#containerPanel3'
        }
    ],

    onBtnLoginClick: function(button, e, eOpts) {
        if (button) {

            var form1 = Ext.getCmp('formLogin');
            var panel1 = Ext.getCmp('panelSignup');
            var formUser1 = Ext.getCmp('formUser');
            var formUser2 = Ext.getCmp('formLogin');
            var btn1 = Ext.getCmp('btnLogout');
            var store = Ext.getStore('Users');
            var username = Ext.getCmp('loginEmail').value;
            var password = Ext.getCmp('loginPassword').value;
            var listUsers = store.data.items;
            var scope = this;

            var storeActive = Ext.getStore('Active');
            var objUser = [{username:username}];

            storeActive.add(objUser);
            Ext.each(listUsers, function(x){
                if (x.data.Email === username && x.data.Password === password){
                    var name = x.data.FirstName;
                    var setName = Ext.getCmp('welcomeUser').setRawValue(name);
                    Ext.getCmp('welcomeUser').setValue(setName);
                    Ext.MessageBox.show({
                    title: 'Login',
                    msg: 'Welcome ' + setName + '!',
                    buttons: Ext.MessageBox.OK,
                    fn: function(btn){
                        if(btn=='OK'){
                            scope.hide();
                        }
                    }
                });

                    }
            });

            form1.form.reset(true);
            panel1.hide();
            formUser1.show();
            formUser2.hide();
            btn1.show();
        }
    },

    onBtnSignupClick: function(button, e, eOpts) {

            var form1 = Ext.getCmp('formSignup');
            var store = Ext.getStore('Users');
            var fname = Ext.getCmp('signupFname').value;
            var lname = Ext.getCmp('signupLname').value;
            var birthdate = Ext.getCmp('signupBdate').value;
            var address = Ext.getCmp('signupAddress').value;
            var city = Ext.getCmp('signupCity').value;
            var country = Ext.getCmp('signupCountry').value;
            var email = Ext.getCmp('signupEmail').value;
            var password = Ext.getCmp('signupPassword').value;
            var listUsers = store.data.items;
            var objectUser = {FirstName: fname, LastName: lname, Birthdate: birthdate, Address: address, City: city, Country:country, Email: email, Password: password};


            if(store.getCount()===0){
                store.add(objectUser);
                var userName = Ext.getCmp('signupFname').value;
            Ext.MessageBox.show({
                 msg: 'Saving your data, please wait...',
                 progressText: 'Saving...',
                 width:300,
                 wait:true,
                 waitConfig: {interval:200},
                 icon:'ext-mb-download', //custom class in msg-box.html
                 iconHeight: 50,
                 animateTarget: 'register'
                       });

          setTimeout(function(){
               Ext.MessageBox.hide();
               Ext.MessageBox.show({
               title: 'User Registration',
               msg: 'User "' + userName + '" successfully registered!',
               buttons: Ext.MessageBox.OK
             });
           }, 5000);
                form1.form.reset(true);
            }else {
                    Ext.each(listUsers, function(x){
                    if (x.data.Email === email){
                        Ext.MessageBox.alert('User', 'Email is already in use. Please login or use another email');
                    }else{
                        store.add(objectUser);
                        var userName = Ext.getCmp('signupFname').value;
                    Ext.MessageBox.show({
                             msg: 'Saving your data, please wait...',
                             progressText: 'Saving...',
                             width:300,
                             wait:true,
                             waitConfig: {interval:200},
                             icon:'ext-mb-download', //custom class in msg-box.html
                             iconHeight: 50,
                             animateTarget: 'register'
                                   });

                      setTimeout(function(){
                           Ext.MessageBox.hide();
                           Ext.MessageBox.show({
                           title: 'User Registration',
                           msg: 'User "' + userName + '" successfully registered!',
                           buttons: Ext.MessageBox.OK
                         });
                       }, 5000);
                        form1.form.reset(true);
                        }
                    });
                }
    },

    onBtnSearchClick: function(button, e, eOpts) {
        this.getContainerPanel1().hide();
        this.getContainerPanel2().show();
        this.getContainerPanel3().hide();
        var store1 = Ext.getStore('Products');
        var product = Ext.getCmp('searchBar').value;
        var listProducts = store1.data.items;

         if(Ext.isEmpty(product)){
                    store1.clearFilter();
                }else{
                store1.filter('ProductName', product);
                }
    },

    onBtnLogoutClick: function(button, e, eOpts) {

        var panel1 = Ext.getCmp('panelSignup');
        var form1 = Ext.getCmp('formLogin');
        var form2 = Ext.getCmp('formUser');
        var btn1 = Ext.getCmp('btnLogout');
        this.getContainerPanel1().show();
        this.getContainerPanel2().hide();
        this.getContainerPanel3().hide();
        Ext.getCmp('welcomeUser').setValue('');
        form1.show();
        form2.hide();
        btn1.hide();
        panel1.show();

    },

    onBtnViewClick: function(button, e, eOpts) {

            this.getContainerPanel1().hide();
            this.getContainerPanel2().hide();
            this.getContainerPanel3().show();

            var allUsers = Ext.getStore('Users');
            var customerFname;
            var customerLname;
            var customerBdate;
            var customerAddress;
            var customerCity;
            var customerCountry;
            var customerEmail;
            var customerPassword;
            var user = Ext.getCmp('welcomeUser').value;
            var items;
            var listUsers1 = allUsers.data.items;

          Ext.each(listUsers1, function(x){
                if (x.data.FirstName === user){
                     customerFname = x.data.FirstName;
                     customerLname = x.data.LastName;
                     customerBdate =  x.data.Birthdate;
                     customerAddress = x.data.Address;
                     customerCity = x.data.City;
                     customerCountry = x.data.Country;
                     customerEmail = x.data.Email;
                     customerPassword = x.data.Password;

                    Ext.getCmp('cFname').setValue(customerFname);
                    Ext.getCmp('cLname').setValue(customerLname);
                    Ext.getCmp('cBdate').setValue(customerBdate);
                    Ext.getCmp('cAddress').setValue(customerAddress);
                    Ext.getCmp('cCity').setValue(customerCity);
                    Ext.getCmp('cCountry').setValue(customerCountry);
                    Ext.getCmp('cEmail').setValue(customerEmail);
                    Ext.getCmp('cPassword').setValue(customerPassword);
                    }
            });

    },

    onBtnUpdateClick: function(button, e, eOpts) {

           Ext.getCmp('btnUpdate').disable();
           Ext.getCmp('btnSave').show();

           Ext.getCmp('cFname').enable();
           Ext.getCmp('cLname').enable();
           Ext.getCmp('cBdate').enable();
           Ext.getCmp('cAddress').enable();
           Ext.getCmp('cCity').enable();
           Ext.getCmp('cCountry').enable();
           Ext.getCmp('cEmail').enable();
           Ext.getCmp('cPassword').enable();



    },

    onBtnSaveClick: function(button, e, eOpts) {
           var custFname;
           var custLname;
           var custBdate;
           var custAddress;
           var custCity;
           var custCountry;
           var custEmail;
           var custPassword;
           var store = Ext.getStore('Users');
           var user = Ext.getCmp('welcomeUser').value;

           custFname = Ext.getCmp('cFname').value;
           custLname = Ext.getCmp('cLname').value;
           custBdate = Ext.getCmp('cBdate').value;
           custAddress = Ext.getCmp('cAddress').value;
           custCity = Ext.getCmp('cCity').value;
           custCountry = Ext.getCmp('cCountry').value;
           custEmail = Ext.getCmp('cEmail').value;
           custPassword = Ext.getCmp('cPassword').value;


           Ext.each(store.data.items, function(rec){
               if (rec.data.FirstName === user){
               rec.data.FirstName = custFname;
               rec.data.LastName = custLname;
               rec.data.Birthdate = custBdate;
               rec.data.Address = custAddress;
               rec.data.City = custCity;
               rec.data.Country = custCountry;
               rec.data.Email = custEmail;
               rec.data.Password = custPassword;
               }
              Ext.getCmp('welcomeUser').setValue(custFname);
                        });





        Ext.MessageBox.show({
                    title: 'Update Information',
                    msg: 'Account updated!',
                    buttons: Ext.MessageBox.OK,
                    fn: function(btn){
                        if(btn=='OK'){
                            scope.hide();
                        }
                    }
                });

    },

    onProductsListSelectionChange: function(model, selected, eOpts) {
         var select, user, pass;

                select = selected;
                Ext.getCmp('textProduct').setValue(select[0].data.ProductName);
                Ext.getCmp('textDescription').setValue(select[0].data.ProductDescription);

    },

    onBtnPurchaseClick: function(button, e, eOpts) {
          var product, description, store, form1, user;

          user = Ext.getCmp('welcomeUser').value;
          product = Ext.getCmp('textProduct').value;
          description = Ext.getCmp('textDescription').value;
          store = Ext.getStore('Products');
          form1 = Ext.getCmp('formProduct');

        if(Ext.isEmpty(user)){
            Ext.MessageBox.alert('User', 'Please login first.');
        }else {
          Ext.Msg.confirm("Purchase", "Purchase " + product + "?", function(btnText){
                   if(btnText === "no"){
                        scope.hide();
                    }
                    else if(btnText === "yes"){
                        Ext.each(store.data.items, function(rec){
                       if(rec.data.ProductName == product){
                             store.remove(rec);
                             }
                       });
                       Ext.Msg.alert("Purchase", "Sucessfully purchased " + product + "!");
                     }
           }, this);
            form1.form.reset();
            store.clearFilter();
        }


    },

    init: function(application) {
        this.control({
            "#btnLogin": {
                click: this.onBtnLoginClick
            },
            "#btnSignup": {
                click: this.onBtnSignupClick
            },
            "#btnSearch": {
                click: this.onBtnSearchClick
            },
            "#btnLogout": {
                click: this.onBtnLogoutClick
            },
            "#btnView": {
                click: this.onBtnViewClick
            },
            "#btnUpdate": {
                click: this.onBtnUpdateClick
            },
            "#btnSave": {
                click: this.onBtnSaveClick
            },
            "#productsList": {
                selectionchange: this.onProductsListSelectionChange
            },
            "#btnPurchase": {
                click: this.onBtnPurchaseClick
            }
        });
    }

});
