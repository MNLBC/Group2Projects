/*
 * File: app/controller/OnlineUsersController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('W5D5_Project.controller.OnlineUsersController', {
    extend: 'Ext.app.Controller',

    control: {
        "#onlineUsersSearch": {
            change: 'onOnlineUsersFieldChange'
        },
        "#onlineUsersGrid": {
            rowdblclick: 'onOnlineUsersGridDblClick'
        },
        "#adminOnlineUsersBtn": {
            click: 'onAdminOnlineUsersClick'
        }
    },

    onOnlineUsersFieldChange: function(field, newValue, oldValue, eOpts) {
        var userEmail, onlineUsersStore;
        userEmail = Ext.getCmp('onlineUsersSearch').getValue();
        onlineUsersStore = Ext.getStore('OnlineUsersStore');

        if(Ext.isEmpty(userEmail)){
            onlineUsersStore.clearFilter();
        } else{
            onlineUsersStore.filter('userEmail',userEmail);
        }
    },

    onOnlineUsersGridDblClick: function(tableview, record, tr, rowIndex, e, eOpts) {
        var user;
        var email = Ext.getCmp('onlineUsersGrid').getSelectionModel().selected.items[0].data.userEmail;
        this.userInfoWindow = Ext.create('W5D5_Project.view.UserInfoWin');
        Ext.Ajax.request({
            url : "getUserByEmail",
            method : "GET",
            async : false,
            params : {
                email : email
            },
            callback : function(options,success,response){
                if (Ext.isEmpty(response.responseText)) {
                    Ext.Msg.alert("Online Users",
                                  "Error in retrieving user details");
                } else {
                    user = Ext.JSON.decode(response.responseText);
                }
            }
        });

        if(this.userInfoWindow!==null){
            var userLevel;
            Ext.getCmp('userInfoId').setValue(user[0].userId);
            Ext.getCmp('userInfoFname').setValue(user[0].userFname);
            Ext.getCmp('userInfoLname').setValue(user[0].userLname);
            Ext.getCmp('userInfoEmail').setValue(user[0].userEmail);
            Ext.getCmp('userInfoType').setValue(user[0].userType);
            if(user[0].userType == 1){
                userLevel = 'Normal';
            } else{
                userLevel = 'Premium';
            }
            Ext.getCmp('userInfoLevel').setValue(userLevel);
            Ext.getCmp('userInfoImg').setSrc('resources/img/logo.png');
            this.userInfoWindow.show();
        }

    },

    onAdminOnlineUsersClick: function(button, e, eOpts) {
        Ext.Ajax.request({
            url : "getAllOnline",
            method : "GET",
            async : false,
            callback : function(options,success,response){
                if (Ext.isEmpty(response.responseText)) {
                    Ext.Msg.alert("Online Users",
                                  "Error in retrieving onlineUsers");
                } else {
                    var onlineUsersStore = Ext.getStore('OnlineUsersStore');
                    var jsonResponse = Ext.JSON.decode(response.responseText);
                    onlineUsersStore.loadData(jsonResponse);
                }
            }
        });
        Ext.getCmp('onlineUsersGrid').getView().refresh();
    }

});
