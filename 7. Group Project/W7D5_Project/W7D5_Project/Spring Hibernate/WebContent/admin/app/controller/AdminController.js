/*
 * File: app/controller/AdminController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('W5D5_Project.controller.AdminController', {
    extend: 'Ext.app.Controller',

    control: {
        "#adminMenuBtn": {
            click: 'onAdminMenuBtnClick'
        },
        "#adminUserMgmtBtn": {
            click: 'onAdminUserMgmtBtnClick'
        },
        "#adminProdMgmtBtn": {
            click: 'onAdminProdMgmtBtnClick'
        },
        "#adminOrderMgmtBtn": {
            click: 'onAdminOrderMgmtBtnClick'
        },
        "#adminOnlineUsersBtn": {
            click: 'onAdminOnlineUsersBtnClick'
        },
        "#adminBackBtn": {
            click: 'onAdminBackBtnClick'
        }
    },

    onAdminMenuBtnClick: function() {
        var menu = Ext.getCmp('adminMenuPanel');
        if(menu.hidden){
            menu.show();
        }else{
            menu.hide();
        }
    },

    onAdminUserMgmtBtnClick: function() {
        var panel = Ext.getCmp('adminTabPanel');
        var tab = Ext.getCmp('userMgmtTab');
        panel.setActiveTab(tab);
        Ext.Ajax.request({
            url : "getAllUsers",
            method : "GET",
            async : false,
            callback : function(options,success,response){
                if (Ext.isEmpty(response.responseText)) {
                    Ext.Msg.alert("Users","Error in getting users");
                } else {
                    var userStore = Ext.getStore('UserStore');
                    var jsonResponse = Ext.JSON.decode(response.responseText);
                    userStore.loadData(jsonResponse);
                }
            }
        });
    },

    onAdminProdMgmtBtnClick: function() {
        var panel = Ext.getCmp('adminTabPanel');
        var tab = Ext.getCmp('prodMgmtTab');
        panel.setActiveTab(tab);
        Ext.Ajax.request({
            url : "getAllProducts",
            method : "GET",
            async : false,
            callback : function(options,success,response){
                if (Ext.isEmpty(response.responseText)) {
                    Ext.Msg.alert("Products","Error in getting products");
                } else {
                    var prodStore = Ext.getStore('ProductStore');
                    var jsonResponse = Ext.JSON.decode(response.responseText);
                    prodStore.loadData(jsonResponse);
                }
            }
        });
    },

    onAdminOrderMgmtBtnClick: function() {
        var panel = Ext.getCmp('adminTabPanel');
        var tab = Ext.getCmp('orderMgmtTab');
        panel.setActiveTab(tab);
    },

    onAdminOnlineUsersBtnClick: function() {
        var panel = Ext.getCmp('adminTabPanel');
        var tab = Ext.getCmp('onlineUsersTab');
        panel.setActiveTab(tab);
    },

    onAdminBackBtnClick: function() {
        var panel = Ext.getCmp('mainTabPanel');
        var tab = Ext.getCmp('digitalPanel');
        panel.setActiveTab(tab);
        var panel1 = Ext.getCmp('headerPanel'),
            panel2 = Ext.getCmp('subHeaderPanel'),
            panel3 = Ext.getCmp('categoryPanel');

        panel1.show();
        panel2.show();
        panel3.show();
    }

});
