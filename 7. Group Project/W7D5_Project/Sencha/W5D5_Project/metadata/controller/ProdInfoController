{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "ProdInfoController"
    },
    "name": "MyController",
    "designerId": "9691efee-f0a6-4041-816a-0b1a357e278a",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "record"
                ],
                "fn": "showProdInfoWin",
                "implHandler": [
                    "this.recordData = record;",
                    "if(Ext.isEmpty(this.prodInfoWin)){",
                    "    this.prodInfoWin = Ext.create('W5D5_Project.view.ProdInfoWin');",
                    "}",
                    "Ext.getCmp('prodInfoImg').setSrc('resources/img/' + record.prodImg + '.png');",
                    "Ext.getCmp('prodInfoId').setValue(record.prodId);",
                    "Ext.getCmp('prodInfoName').setValue(record.prodName);",
                    "Ext.getCmp('prodInfoCat').setValue(record.prodCat);",
                    "Ext.getCmp('prodInfoDesc').setValue(record.prodDesc);",
                    "if(record.prodSale!=1){",
                    "    Ext.getCmp('prodInfoPrice').setValue(record.prodPrice * record.prodSale);",
                    "}else{",
                    "    Ext.getCmp('prodInfoPrice').setValue(record.prodPrice);",
                    "}",
                    "",
                    "",
                    "Ext.Ajax.request({",
                    "    url : 'getProductReviewByProduct',",
                    "    method : 'POST',",
                    "    params : {",
                    "        productId : record.prodId",
                    "    },",
                    "    async : false,",
                    "    callback : function(options, success, response){",
                    "        if(Ext.isEmpty(response.responseText)){",
                    "            Ext.Msg.alert('Product Review', 'Error in retrieving product review.');",
                    "        }else{",
                    "            var prodReviewStore = Ext.getStore('ProdReviewStore');",
                    "            var jsonResponse = Ext.JSON.decode(response.responseText),",
                    "                review = '',",
                    "                email = Ext.getCmp('emailField'),",
                    "                average = 0;",
                    "            prodReviewStore.loadData(jsonResponse);",
                    "            Ext.each(prodReviewStore.data.items, function(rec){",
                    "               if(rec.data.email == email.getValue()){",
                    "                   review = rec;",
                    "               }",
                    "               average += parseInt(rec.data.rating);",
                    "            });",
                    "            if(average!='0'){",
                    "               average = average / prodReviewStore.data.items.length;",
                    "               Ext.getCmp('prodInfoAveRating').setValue(average);",
                    "            }else{",
                    "               Ext.getCmp('prodInfoAveRating').setValue('Not Yet Rated');",
                    "            }",
                    "            if(!Ext.isEmpty(review)){",
                    "               var prodInfoRating = Ext.getCmp('prodInfoRating');",
                    "               prodInfoRating.select(prodInfoRating.store.data.items[review.data.rating-1]);",
                    "               Ext.getCmp('prodInfoReview').setValue(review.data.review);",
                    "               Ext.getCmp('prodInfoPostBtn').disable();",
                    "               Ext.getCmp('prodInfoRemoveBtn').enable();",
                    "            }else{",
                    "               Ext.getCmp('prodInfoRating').setValue('');",
                    "               Ext.getCmp('prodInfoReview').setValue('');",
                    "               Ext.getCmp('prodInfoPostBtn').enable();",
                    "               Ext.getCmp('prodInfoRemoveBtn').disable();",
                    "            }",
                    "        }",
                    "    }",
                    "});",
                    "",
                    "this.prodInfoWin.show();"
                ]
            },
            "name": "showProdInfoWin",
            "designerId": "d364c2fe-1cd7-4ff9-8c5c-570118a06dea"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "hideProdInfoWin",
                "implHandler": [
                    "if(!Ext.isEmpty(this.prodInfoWin)){",
                    "    this.prodInfoWin.hide();",
                    "}"
                ]
            },
            "name": "hideProdInfoWin",
            "designerId": "b360c983-0d9b-4278-8215-663abc5b9e81"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getProductReviews",
                "implHandler": [
                    "record = this.recordData;",
                    "",
                    "Ext.Ajax.request({",
                    "    url : 'getProductReviewByProduct',",
                    "    method : 'POST',",
                    "    params : {",
                    "        productId : record.prodId",
                    "    },",
                    "    async : false,",
                    "    callback : function(options, success, response){",
                    "        if(Ext.isEmpty(response.responseText)){",
                    "            Ext.Msg.alert('Product Review', 'Error in retrieving product review.');",
                    "        }else{",
                    "            var prodReviewStore = Ext.getStore('ProdReviewStore');",
                    "            var jsonResponse = Ext.JSON.decode(response.responseText),",
                    "                review = '',",
                    "                email = Ext.getCmp('emailField'),",
                    "                average = 0;",
                    "            prodReviewStore.loadData(jsonResponse);",
                    "            Ext.each(prodReviewStore.data.items, function(rec){",
                    "               if(rec.data.email == email.getValue()){",
                    "                   review = rec;",
                    "               }",
                    "               average += parseInt(rec.data.rating);",
                    "            });",
                    "            if(average!='0'){",
                    "               average = average / prodReviewStore.data.items.length;",
                    "               Ext.getCmp('prodInfoAveRating').setValue(average);",
                    "            }else{",
                    "               Ext.getCmp('prodInfoAveRating').setValue('Not Yet Rated');",
                    "            }",
                    "            if(!Ext.isEmpty(review)){",
                    "               var prodInfoRating = Ext.getCmp('prodInfoRating');",
                    "               prodInfoRating.select(prodInfoRating.store.data.items[review.data.rating-1]);",
                    "               Ext.getCmp('prodInfoReview').setValue(review.data.review);",
                    "               Ext.getCmp('prodInfoPostBtn').disable();",
                    "               Ext.getCmp('prodInfoRemoveBtn').enable();",
                    "            }else{",
                    "               Ext.getCmp('prodInfoRating').setValue('');",
                    "               Ext.getCmp('prodInfoReview').setValue('');",
                    "               Ext.getCmp('prodInfoPostBtn').enable();",
                    "               Ext.getCmp('prodInfoRemoveBtn').disable();",
                    "            }",
                    "        }",
                    "    }",
                    "});"
                ]
            },
            "name": "getProductReviews",
            "designerId": "57f787ad-cfea-452c-b89b-882b2f6d279f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#prodInfoCartBtn",
                "designer|targetType": "MyButton30",
                "fn": "onProdInfoCartBtnClick",
                "implHandler": [
                    "var store = Ext.getStore('CartProductStore'),",
                    "    record = this.recordData,",
                    "    isExists = false,",
                    "    cartCount = Ext.getCmp('cartCount');",
                    "Ext.each(store.data.items,function(rec){",
                    "    if(rec.data.prodId==record.prodId){",
                    "        rec.data.prodQty=parseInt(rec.data.prodQty)+1;",
                    "        rec.data.prodSubtotal=rec.data.prodSubtotal+rec.data.prodPrice;",
                    "        isExists = true;",
                    "        record=rec.data;",
                    "        Ext.getCmp('cartProductGrid').getView().refresh();",
                    "    }",
                    "});",
                    "if(!isExists){",
                    "    record.cartprodId='';",
                    "    record.prodQty=1;",
                    "    store.add(record);",
                    "}",
                    "Ext.Msg.alert('Status', 'Added item to cart');",
                    "console.log(store);",
                    "Ext.Ajax.request({",
                    "    url : 'addToCart',",
                    "    method : 'POST',",
                    "    params : {",
                    "        userId: Ext.getCmp('idField').getValue(),",
                    "        prodId: record.prodId,",
                    "        prodName: record.prodName,",
                    "        prodCat: record.prodCat,",
                    "        prodDesc: record.prodDesc,",
                    "        prodPrice: record.prodPrice,",
                    "        prodSale: record.prodSale,",
                    "        prodStock: record.prodStock,",
                    "        prodImg: record.prodImg,",
                    "        prodQty: record.prodQty,",
                    "        prodSubtotal: record.prodSubtotal",
                    "    },",
                    "    callback : function(options, success, response){",
                    "        if(!Ext.isEmpty(response.responseText)){",
                    "            console.log(\"success!\");",
                    "        }",
                    "    }",
                    "});",
                    "",
                    "var controller = W5D5_Project.app.getController('ProdInfoController');",
                    "controller.hideProdInfoWin();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onProdInfoCartBtnClick",
            "designerId": "1a2a5927-9678-4a4e-91a7-a3d50316aa11"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#prodInfoPostBtn",
                "designer|targetType": "MyButton27",
                "fn": "onProdInfoPostBtnClick",
                "implHandler": [
                    "var review = {",
                    "    reviewId : '',",
                    "    productId : Ext.getCmp('prodInfoId').getValue(),",
                    "    email : Ext.getCmp('emailField').getValue(),",
                    "    review : Ext.getCmp('prodInfoReview').getValue(),",
                    "    rating : Ext.getCmp('prodInfoRating').getValue(),",
                    "    date : new Date()",
                    "};",
                    "",
                    "if(!Ext.getCmp('prodInfoReviewBody').isValid()){",
                    "    Ext.Msg.alert('Product Review', 'Please fill out rating and review.');",
                    "    return;",
                    "}",
                    "",
                    "Ext.Ajax.request({",
                    "    url : 'addProductReview',",
                    "    method : 'POST',",
                    "    params : {",
                    "        review : Ext.encode(review)",
                    "    },",
                    "    jsonData : Ext.util.JSON.encode(review),",
                    "    async : false,",
                    "    callback : function(options, success, response){",
                    "        if(Ext.isEmpty(response.responseText) || response.responseText == 'false'){",
                    "            Ext.Msg.alert('Product Review', 'Error in posting product review.');",
                    "        }else{",
                    "            Ext.Msg.alert('Product Review', 'Successfully posted product review.');",
                    "            var controller = W5D5_Project.app.getController('ProdInfoController');",
                    "            controller.getProductReviews();",
                    "        }",
                    "    }",
                    "});"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onProdInfoPostBtnClick",
            "designerId": "c59f291b-af58-4208-85a2-e6c9cff0b144"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#prodInfoUpdateBtn",
                "designer|targetType": "MyButton29",
                "fn": "onProdInfoUpdateBtnClick",
                "name": "click",
                "scope": "me"
            },
            "name": "onProdInfoUpdateBtnClick",
            "designerId": "88cb4805-5c13-406d-b990-8888e8ffb6ee"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#prodInfoRemoveBtn",
                "designer|targetType": "MyButton28",
                "fn": "onProdInfoRemoveBtnClick",
                "implHandler": [
                    "",
                    "var prodReviewStore = Ext.getStore('ProdReviewStore'),",
                    "    reviewId = 0,",
                    "    email = Ext.getCmp('emailField');",
                    "Ext.each(prodReviewStore.data.items, function(rec){",
                    "   if(rec.data.email == email.getValue()){",
                    "       reviewId = rec.data.reviewId;",
                    "   }",
                    "});",
                    "",
                    "Ext.Ajax.request({",
                    "    url : 'removeProductReview',",
                    "    method : 'POST',",
                    "    params : {",
                    "        id : reviewId",
                    "    },",
                    "    async : false,",
                    "    callback : function(options, success, response){",
                    "        if(Ext.isEmpty(response.responseText) || response.responseText == 'false'){",
                    "            Ext.Msg.alert('Product Review', 'Error in removing product review.');",
                    "        }else{",
                    "            Ext.Msg.alert('Product Review', 'Successfully removed product review.');",
                    "            var controller = W5D5_Project.app.getController('ProdInfoController');",
                    "            controller.getProductReviews();",
                    "        }",
                    "    }",
                    "});",
                    ""
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onProdInfoRemoveBtnClick",
            "designerId": "a2217aaf-ad5d-4dcc-be83-d1e9bd045e6e"
        }
    ]
}