{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "UserMgmtController",
        "id": "userMgmtController"
    },
    "name": "MyController",
    "designerId": "fd1ce5f2-3d78-4130-9344-3240e3434e18",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getUserFormValues",
                "implHandler": [
                    "",
                    "var userFname = Ext.getCmp('userMgmtFname').getValue();",
                    "var userLname = Ext.getCmp('userMgmtLname').getValue();",
                    "var userEmail = Ext.getCmp('userMgmtEmail').getValue();",
                    "var userPass = Ext.getCmp('userMgmtPass').getValue();",
                    "var userAddress1 = Ext.getCmp('userMgmtAdd1').getValue();",
                    "var userAddress2 = Ext.getCmp('userMgmtAdd2').getValue();",
                    "var userLevel = Ext.getCmp('userMgmtLevel').getValue();",
                    "var userOccup = Ext.getCmp('userMgmtOccup').getValue();",
                    "var userCity = Ext.getCmp('userMgmtCity').getValue();",
                    "var userSp = Ext.getCmp('userMgmtSp').getValue();",
                    "var userCountry = Ext.getCmp('userMgmtCountry').getValue();",
                    "var userType = Ext.getCmp('userMgmtType').getValue();",
                    "",
                    "var user = {",
                    "    \"userId\":'',",
                    "    \"userFname\":userFname,",
                    "    \"userLname\":userLname,",
                    "    \"userEmail\":userEmail,",
                    "    \"userAddress1\":userAddress1,",
                    "    \"userAddress2\":userAddress2,",
                    "    \"userPass\":userPass,",
                    "    \"userCity\":userCity,",
                    "    \"userSp\":userSp,",
                    "    \"userCountry\":userCountry,",
                    "    \"userLevel\":userLevel,",
                    "    \"userOccupation\":userOccup,",
                    "    \"userType\":userType",
                    "};",
                    "",
                    "return user;"
                ]
            },
            "name": "getUserFormValues",
            "designerId": "0071fee5-1f2a-478a-895d-1206584173b7"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "userResetFormValues",
                "implHandler": [
                    "  Ext.getCmp('userMgmtId').setValue('');",
                    "  Ext.getCmp('userMgmtFname').setValue('');",
                    "  Ext.getCmp('userMgmtLname').setValue('');",
                    "  Ext.getCmp('userMgmtEmail').setValue('');",
                    "  Ext.getCmp('userMgmtAdd1').setValue('');",
                    "  Ext.getCmp('userMgmtAdd2').setValue('');",
                    "  Ext.getCmp('userMgmtCity').setValue('');",
                    "  Ext.getCmp('userMgmtSp').setValue('');",
                    "  Ext.getCmp('userMgmtCountry').setValue('');",
                    "  Ext.getCmp('userMgmtPass').setValue('');",
                    "  Ext.getCmp('userMgmtType').setValue('');",
                    "  Ext.getCmp('userMgmtLevel').setValue('');",
                    "  Ext.getCmp('userMgmtOccup').setValue('');",
                    "  Ext.getCmp('userMgmtSearch').setValue('');",
                    "  Ext.getStore('UserStore').clearFilter();"
                ]
            },
            "name": "userResetFormValues",
            "designerId": "c8db5f75-cf8f-4600-a013-33cfd27db6d5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtCreate",
                "designer|targetType": "MyButton23",
                "fn": "onUserMgmtCreateClick",
                "implHandler": [
                    "var controller = W5D5_Project.app.getController('UserMgmtController');",
                    "var user = controller.getUserFormValues();",
                    "",
                    "if (!(Ext.getCmp('userMgmtField1').isValid() || Ext.getCmp('userMgmtField2').isValid())) {",
                    "    Ext.Msg.alert('Create User', \"Please fill out required fields\");",
                    "    return;",
                    "} else {",
                    "    Ext.Ajax.request({",
                    "        url : \"getUserByEmail\",",
                    "        method : \"GET\",",
                    "        async : false,",
                    "        params : {",
                    "            email : user.userEmail",
                    "        },",
                    "        callback : function(options, success, response) {",
                    "            if (!Ext.isEmpty(response.responseText)) {",
                    "                Ext.Msg.alert('Create User','Account with that email already exists.');",
                    "            } else {",
                    "                Ext.Ajax.request({",
                    "                    url : \"register\",",
                    "                    method : 'POST',",
                    "                    params : {",
                    "                        user : Ext.encode(user)",
                    "                    },",
                    "                    async : false,",
                    "                    jsonData : Ext.util.JSON.encode(user),",
                    "                    callback : function(options, success,response) {",
                    "                        if (Ext.isEmpty(response.responseText)) {",
                    "                            Ext.Msg.alert('Create User','There is a problem with the registration. Please try again later');",
                    "                        } else {",
                    "                            var resp = Ext.decode(response.responseText);",
                    "                            if (resp.responseCode == '0') {",
                    "                                Ext.Msg.alert('Create User','User \"' + userEmail + '\" successfully registered!');",
                    "                                controller.userRefresh();",
                    "                                controller.userResetFormValues();",
                    "                            } else if (resp.responseCode == '999') {",
                    "                                var msgs = '';",
                    "                                Ext.each(resp.errors,function(error) {",
                    "                                    msgs = msgs + '<br>' + error.defaultMessage;",
                    "                                });",
                    "                                Ext.Msg.alert('Create User','Validation error. Please check the following: '+ msgs);",
                    "                            } else {",
                    "                                Ext.Msg.alert('Create User','There is a problem with the registration. Please try again later');",
                    "                            }",
                    "                        }",
                    "                    }",
                    "                });",
                    "            }",
                    "        }",
                    "    });",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onUserMgmtCreateClick",
            "designerId": "adb66135-725a-4c10-a6be-6b95ce6b98ac"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "userMgmtGrid",
                "selector": "#userMgmtGrid"
            },
            "name": "userMgmtGrid",
            "designerId": "18f40d49-6a15-4689-9106-8d464aefdeba"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtReset",
                "designer|targetType": "MyButton22",
                "fn": "onUserMgmtResetClick",
                "implHandler": [
                    "var controller = W5D5_Project.app.getController('UserMgmtController');",
                    "controller.userResetFormValues();",
                    "var pass = Ext.getCmp('userMgmtPass');",
                    "pass.setReadOnly(false);"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onUserMgmtResetClick",
            "designerId": "c022caa5-6e73-4151-a43f-f85eb84f2463"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtCountry",
                "designer|targetType": "MyComboBox9",
                "fn": "onUserMgmtCountryChange",
                "implHandler": [
                    "var state = Ext.getStore('SPStore');",
                    "var country = Ext.getCmp('userMgmtCountry').value;",
                    "state.filter('CountryName', country);"
                ],
                "name": "change",
                "scope": "me"
            },
            "name": "onUserMgmtCountryChange",
            "designerId": "a928cb19-e276-400b-abb0-509927b5d106"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtUpdate",
                "designer|targetType": "MyButton24",
                "fn": "onUserMgmtUpdateClick",
                "implHandler": [
                    "var id = Ext.getCmp('userMgmtId').getValue();",
                    "var fname = Ext.getCmp('userMgmtFname').getValue();",
                    "var lname = Ext.getCmp('userMgmtLname').getValue();",
                    "var email = Ext.getCmp('userMgmtEmail').getValue();",
                    "var address1 = Ext.getCmp('userMgmtAdd1').getValue();",
                    "var address2 = Ext.getCmp('userMgmtAdd2').getValue();",
                    "var city = Ext.getCmp('userMgmtCity').getValue();",
                    "var sp = Ext.getCmp('userMgmtSp').getValue();",
                    "var country = Ext.getCmp('userMgmtCountry').getValue();",
                    "var pass = Ext.getCmp('userMgmtPass').getValue();",
                    "var occupation = Ext.getCmp('userMgmtOccup').getValue();",
                    "var userLevel = Ext.getCmp('userMgmtLevel').getValue();",
                    "var accountType = Ext.getCmp('userMgmtType').getValue();",
                    "var field1 = Ext.getCmp('userMgmtField1');",
                    "var field2 = Ext.getCmp('userMgmtField2');",
                    "var controller = W5D5_Project.app.getController('UserMgmtController');",
                    "var user;",
                    "",
                    "if(Ext.isEmpty(id)){",
                    "    Ext.Msg.show({",
                    "     title:'',",
                    "     msg: 'Please select a record to update.',",
                    "     buttons: Ext.Msg.OK,",
                    "     icon: Ext.Msg.WARNING",
                    "   });",
                    "} else {",
                    "    if(field1.isValid() && field2.isValid()){",
                    "    user = {",
                    "        \"userId\":id,",
                    "        \"userFname\":fname,",
                    "        \"userLname\":lname,",
                    "        \"userEmail\":email,",
                    "        \"userPass\":pass,",
                    "        \"userOccupation\":occupation,",
                    "        \"userAddress1\":address1,",
                    "        \"userAddress2\":address2,",
                    "        \"userCity\":city,",
                    "        \"userSp\":sp,",
                    "        \"userCountry\":country,",
                    "        \"userType\":accountType,",
                    "        \"userLevel\":userLevel",
                    "    };",
                    "    Ext.Ajax.request({",
                    "        url : \"updateUserByAdmin\",",
                    "        method: 'POST',",
                    "        params : {",
                    "            user: Ext.encode(user)",
                    "        },",
                    "        async: false,",
                    "        jsonData: Ext.util.JSON.encode(user),",
                    "        callback : function(options, success, response){",
                    "            if(response.responseText===''){",
                    "                Ext.Msg.alert(\"Update User\", \"Error encountered in updating user.\");",
                    "            }else {",
                    "                Ext.Msg.alert(\"Update User\", \"User information successfully updated.\");",
                    "                Ext.getCmp('userField').setValue(user.userFname);",
                    "                Ext.getCmp('idField').setValue(user.userId);",
                    "                if(Ext.isEmpty(user.userAddress2)){",
                    "                    Ext.getCmp('addField').setValue(user.userAddress1 + ', ' + user.userCity + ', ' + user.userSp + ', ' + user.userCountry);",
                    "                }else{",
                    "                    Ext.getCmp('addField').setValue(user.userAddress1 + ', ' + user.userAddress2 + ', ' + user.userCity + ', ' + user.userSp + ', ' + user.userCountry);",
                    "                }",
                    "                Ext.getCmp('emailField').setValue(user.userEmail);",
                    "                Ext.getCmp('levelField').setValue(user.userLevel);",
                    "                controller.userRefresh();",
                    "                controller.userResetFormValues();",
                    "            }",
                    "        }",
                    "    });",
                    "}else{",
                    "    Ext.Msg.alert(\"Update User\", \"Validation error. Please check the field values.\");",
                    "}",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onUserMgmtUpdateClick",
            "designerId": "1225871a-b54f-486b-bb70-e01b0c28d383"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtDelete",
                "designer|targetType": "MyButton25",
                "fn": "onUserMgmtDeleteClick",
                "implHandler": [
                    "var controller = W5D5_Project.app.getController('UserMgmtController');",
                    "var store = Ext.getStore('UserStore');",
                    "var id = Ext.getCmp('userMgmtId').getValue();",
                    "var record = '';",
                    "if(Ext.isEmpty(id)){",
                    "    Ext.Msg.show({",
                    "     title:'',",
                    "     msg: 'Please select a record to delete.',",
                    "     buttons: Ext.Msg.OK,",
                    "     icon: Ext.Msg.WARNING",
                    "   });",
                    "}else{",
                    "    Ext.each(store.data.items, function(rec){",
                    "       if(rec.data.userId == id){",
                    "       record = rec;",
                    "    }",
                    " });",
                    "    if(!Ext.isEmpty(record)){",
                    "     Ext.Ajax.request({",
                    "        url : 'deleteUser',",
                    "        method : 'POST',",
                    "        params : {",
                    "            id : id",
                    "        },",
                    "        callback : function(options, success, response){",
                    "            if(!Ext.isEmpty(response.responseText)){",
                    "                console.log(\"success!\");",
                    "            }",
                    "        }",
                    "    });",
                    "    store.remove(record);",
                    "    Ext.Msg.alert('Success', 'User successfully deleted');",
                    "    controller.userRefresh();",
                    "}",
                    "controller.userResetFormValues();",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onUserMgmtDeleteClick",
            "designerId": "a5dc573b-6831-42d0-8cfa-9b5d36691ed0"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onUserMgmtGridSelectionChange",
                "implHandler": [
                    "     if(!Ext.isEmpty(selected)){",
                    "         Ext.getCmp('userMgmtId').setValue(selected[0].data.userId);",
                    "         Ext.getCmp('userMgmtFname').setValue(selected[0].data.userFname);",
                    "         Ext.getCmp('userMgmtLname').setValue(selected[0].data.userLname);",
                    "         Ext.getCmp('userMgmtAdd1').setValue(selected[0].data.userAddress1);",
                    "         Ext.getCmp('userMgmtAdd2').setValue(selected[0].data.userAddress2);",
                    "         Ext.getCmp('userMgmtCountry').setValue(selected[0].data.userCountry);",
                    "         Ext.getCmp('userMgmtSp').setValue(selected[0].data.userSp);",
                    "         Ext.getCmp('userMgmtCity').setValue(selected[0].data.userCity);",
                    "         Ext.getCmp('userMgmtOccup').setValue(selected[0].data.userOccupation);",
                    "         Ext.getCmp('userMgmtEmail').setValue(selected[0].data.userEmail);",
                    "         Ext.getCmp('userMgmtPass').setValue(selected[0].data.userPass);",
                    "         var userMgmtLevel = Ext.getCmp('userMgmtLevel');",
                    "         userMgmtLevel.select(userMgmtLevel.store.data.items[selected[0].data.userLevel-1]);",
                    "         Ext.getCmp('userMgmtType').setValue(selected[0].data.userType);",
                    "         var pass = Ext.getCmp('userMgmtPass');",
                    "         pass.setReadOnly(true);",
                    "        }else{",
                    "            var controller = W5D5_Project.app.getController('UserMgmtController');",
                    "            controller.userResetFormValues();",
                    "        }"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onUserMgmtGridSelectionChange",
            "designerId": "2b6223ff-a350-4ff9-950d-2bff5ac5fe78"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtSearch",
                "designer|targetType": "MyTextField46",
                "fn": "onUserMgmtSearchChange",
                "implHandler": [
                    "var searchVal = Ext.getCmp('userMgmtSearch').getValue();",
                    "var store = Ext.getStore('UserStore');",
                    "if(Ext.isEmpty(searchVal)){",
                    "    store.clearFilter();",
                    "}else{",
                    "    store.filter('userEmail', searchVal);",
                    "}"
                ],
                "name": "change",
                "scope": "me"
            },
            "name": "onUserMgmtSearchChange",
            "designerId": "553f9fbc-adc1-4cda-9a37-e31cbd9a5c16"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtField1",
                "designer|params": [
                    "me, field"
                ],
                "designer|targetType": "MyForm5",
                "fn": "onUserMgmtField1BeforeAdd",
                "implHandler": [
                    "if (!field.allowBlank){",
                    "    field.labelSeparator += '<span style=\"color: rgb(255, 0, 0); padding-left: 2px;\">*</span>';",
                    "}"
                ],
                "name": "beforeadd",
                "scope": "me"
            },
            "name": "onUserMgmtField1BeforeAdd",
            "designerId": "b6a29463-c324-48dd-9b90-38c97a04c80e"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtField2",
                "designer|params": [
                    "me, field"
                ],
                "designer|targetType": "MyForm6",
                "fn": "onUserMgmtField2BeforeAdd",
                "implHandler": [
                    "if (!field.allowBlank){",
                    "    field.labelSeparator += '<span style=\"color: rgb(255, 0, 0); padding-left: 2px;\">*</span>';",
                    "}"
                ],
                "name": "beforeadd",
                "scope": "me"
            },
            "name": "onUserMgmtField2BeforeAdd",
            "designerId": "9e34b5a5-d122-4e29-bfbb-deed16f51bb0"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "userRefresh",
                "implHandler": [
                    "Ext.Ajax.request({",
                    "    url : \"getAllUsers\",",
                    "    method : \"GET\",",
                    "    async : false,",
                    "    callback : function(options,success,response){",
                    "        if (Ext.isEmpty(response.responseText)) {",
                    "            Ext.Msg.alert(\"Users\",",
                    "                          \"Error in getting users\");",
                    "        } else {",
                    "            var userStore = Ext.getStore('UserStore');",
                    "            var jsonResponse = Ext.JSON.decode(response.responseText);",
                    "            userStore.loadData(jsonResponse);",
                    "        }",
                    "    }",
                    "});"
                ]
            },
            "name": "userRefresh",
            "designerId": "8f584107-de7d-438b-a7f3-ca45dd4efb51"
        }
    ]
}