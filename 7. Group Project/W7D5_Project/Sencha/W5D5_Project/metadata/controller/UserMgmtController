{
    "type": "Ext.app.Controller",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "designer|userClassName": "UserMgmtController",
        "id": "userMgmtController"
    },
    "name": "MyController",
    "designerId": "989fc48a-7112-4705-ba58-0de4da28a18a",
    "cn": [
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "getUserFormValues",
                "implHandler": [
                    "",
                    "var userFname = Ext.getCmp('userMgmtFname').getValue();",
                    "var userLname = Ext.getCmp('userMgmtLname').getValue();",
                    "var userEmail = Ext.getCmp('userMgmtEmail').getValue();",
                    "var userPass = Ext.getCmp('userMgmtPass').getValue();",
                    "var userAddress1 = Ext.getCmp('userMgmtAdd1').getValue();",
                    "var userAddress2 = Ext.getCmp('userMgmtAdd2').getValue();",
                    "var userLevel = Ext.getCmp('userMgmtLevel').getValue();",
                    "var userOccup = Ext.getCmp('userMgmtOccup').getValue();",
                    "var userCity = Ext.getCmp('userMgmtCity').getValue();",
                    "var userSp = Ext.getCmp('userMgmtSp').getValue();",
                    "var userCountry = Ext.getCmp('userMgmtCountry').getValue();",
                    "var userType = Ext.getCmp('userMgmtType').getValue();",
                    "",
                    "var user = {",
                    "    \"userId\":'',",
                    "    \"userFname\":userFname,",
                    "    \"userLname\":userLname,",
                    "    \"userEmail\":userEmail,",
                    "    \"userAddress1\":userAddress1,",
                    "    \"userAddress2\":userAddress2,",
                    "    \"userPass\":userPass,",
                    "    \"userCity\":userCity,",
                    "    \"userSp\":userSp,",
                    "    \"userCountry\":userCountry,",
                    "    \"userLevel\":userLevel,",
                    "    \"userOccupation\":userOccup,",
                    "    \"userType\":userType",
                    "};",
                    "",
                    "return user;"
                ]
            },
            "name": "getUserFormValues",
            "designerId": "cf507cbc-8a88-4837-b31e-28f2f979455c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "userResetFormValues",
                "implHandler": [
                    "  Ext.getCmp('userMgmtId').setValue('');",
                    "  Ext.getCmp('userMgmtFname').setValue('');",
                    "  Ext.getCmp('userMgmtLname').setValue('');",
                    "  Ext.getCmp('userMgmtEmail').setValue('');",
                    "  Ext.getCmp('userMgmtAdd1').setValue('');",
                    "  Ext.getCmp('userMgmtAdd2').setValue('');",
                    "  Ext.getCmp('userMgmtCity').setValue('');",
                    "  Ext.getCmp('userMgmtSp').setValue('');",
                    "  Ext.getCmp('userMgmtCountry').setValue('');",
                    "  Ext.getCmp('userMgmtPass').setValue('');",
                    "  Ext.getCmp('userMgmtType').setValue('');",
                    "  Ext.getCmp('userMgmtLevel').setValue('');",
                    "  Ext.getCmp('userMgmtOccup').setValue('');",
                    "  Ext.getCmp('userMgmtSearch').setValue('');",
                    "  Ext.getStore('UserStore').clearFilter();"
                ]
            },
            "name": "userResetFormValues",
            "designerId": "201ecd72-28ee-499f-b101-5ceab7d2ef13"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtCreate",
                "designer|targetType": "MyButton23",
                "fn": "onUserMgmtCreateClick",
                "implHandler": [
                    "var controller = W5D5_Project.app.getController('UserMgmtController');",
                    "var user = controller.getUserFormValues();",
                    "",
                    "if (!(Ext.getCmp('userMgmtField1').isValid() || Ext.getCmp('userMgmtField2').isValid())) {",
                    "\tExt.Msg.alert('Create User', \"Please fill out required fields\");",
                    "\treturn;",
                    "} else {",
                    "\tExt.Ajax.request({",
                    "\t\turl : \"getUserByEmail\",",
                    "\t\tmethod : \"GET\",",
                    "\t\tasync : false,",
                    "\t\tparams : {",
                    "\t\t\temail : userEmail",
                    "\t\t},",
                    "\t\tcallback : function(options, success, response) {",
                    "\t\t\tif (success === true) {",
                    "\t\t\t\tExt.Msg.alert('Create User','Account with that email already exists.');",
                    "\t\t\t} else {",
                    "\t\t\t\tExt.Ajax.request({",
                    "\t\t\t\t\t\t\turl : \"register\",",
                    "\t\t\t\t\t\t\tmethod : 'POST',",
                    "\t\t\t\t\t\t\tparams : {",
                    "\t\t\t\t\t\t\t\tuser : Ext.encode(user)",
                    "\t\t\t\t\t\t\t},",
                    "\t\t\t\t\t\t\tasync : false,",
                    "\t\t\t\t\t\t\tjsonData : Ext.util.JSON.encode(user),",
                    "\t\t\t\t\t\t\tcallback : function(options, success,response) {",
                    "\t\t\t\t\t\t\t\tif (Ext.isEmpty(response.responseText)) {",
                    "\t\t\t\t\t\t\t\t\tExt.Msg.alert('Create User','There is a problem with the registration. Please try again later');",
                    "\t\t\t\t\t\t\t\t} else {",
                    "\t\t\t\t\t\t\t\t\tvar resp = Ext.decode(response.responseText);",
                    "\t\t\t\t\t\t\t\t\tif (resp.responseCode == '0') {",
                    "\t\t\t\t\t\t\t\t\t\tExt.Msg.alert('Create User','User \"' + userEmail + '\" successfully registered!');",
                    "\t\t\t\t\t\t\t\t\t\tcontroller.userRefresh();",
                    "\t\t\t\t\t\t\t\t\t} else if (resp.responseCode == '999') {",
                    "\t\t\t\t\t\t\t\t\t\tvar msgs = '';",
                    "\t\t\t\t\t\t\t\t\t\tExt.each(resp.errors,function(error) {",
                    "\t\t\t\t\t\t\t\t\t\t\tmsgs = msgs + '<br>' + error.defaultMessage;",
                    "\t\t\t\t\t\t\t\t\t\t});",
                    "\t\t\t\t\t\t\t\t\t\tExt.Msg.alert('Create User','Validation error. Please check the following: '+ msgs);",
                    "\t\t\t\t\t\t\t\t\t} else {",
                    "\t\t\t\t\t\t\t\t\t\tExt.Msg.alert('Create User','There is a problem with the registration. Please try again later');",
                    "\t\t\t\t\t\t\t\t\t}",
                    "\t\t\t\t\t\t\t\t}",
                    "\t\t\t\t\t\t\t}",
                    "\t\t\t\t\t\t});",
                    "\t\t\t}",
                    "\t\t}",
                    "\t});",
                    "}",
                    "controller.userResetFormValues();"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onUserMgmtCreateClick",
            "designerId": "2e833d72-d452-4229-b32a-6421c7a42d25"
        },
        {
            "type": "controllerref",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "ref": "userMgmtGrid",
                "selector": "#userMgmtGrid"
            },
            "name": "userMgmtGrid",
            "designerId": "04690ac1-baf2-4da7-9d46-aa95b046628b"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtReset",
                "designer|targetType": "MyButton22",
                "fn": "onUserMgmtResetClick",
                "implHandler": [
                    "var controller = W5D5_Project.app.getController('UserMgmtController');",
                    "controller.userResetFormValues();",
                    "var pass = Ext.getCmp('userMgmtPass');",
                    "pass.setReadOnly(false);"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onUserMgmtResetClick",
            "designerId": "8581cfb2-8f7a-413f-831f-0e17f3c4eaa5"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtCountry",
                "designer|targetType": "MyComboBox9",
                "fn": "onUserMgmtCountryChange",
                "implHandler": [
                    "var state = Ext.getStore('SPStore');",
                    "var country = Ext.getCmp('userMgmtCountry').value;",
                    "state.filter('CountryName', country);"
                ],
                "name": "change",
                "scope": "me"
            },
            "name": "onUserMgmtCountryChange",
            "designerId": "bec42611-08f4-4a19-bada-4f4cf1c01558"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtUpdate",
                "designer|targetType": "MyButton24",
                "fn": "onUserMgmtUpdateClick",
                "implHandler": [
                    "var id = Ext.getCmp('userMgmtId').getValue();",
                    "var fname = Ext.getCmp('userMgmtFname').getValue();",
                    "var lname = Ext.getCmp('userMgmtLname').getValue();",
                    "var email = Ext.getCmp('userMgmtEmail').getValue();",
                    "var address1 = Ext.getCmp('userMgmtAdd1').getValue();",
                    "var address2 = Ext.getCmp('userMgmtAdd2').getValue();",
                    "var city = Ext.getCmp('userMgmtCity').getValue();",
                    "var sp = Ext.getCmp('userMgmtSp').getValue();",
                    "var country = Ext.getCmp('userMgmtCountry').getValue();",
                    "var pass = Ext.getCmp('userMgmtPass').getValue();",
                    "var occupation = Ext.getCmp('userMgmtOccup').getValue();",
                    "var userLevel = Ext.getCmp('userMgmtLevel').getValue();",
                    "var accountType = Ext.getCmp('userMgmtType').getValue();",
                    "var field1 = Ext.getCmp('userMgmtField1');",
                    "var field2 = Ext.getCmp('userMgmtField2');",
                    "var controller = W5D5_Project.app.getController('UserMgmtController');",
                    "var user;",
                    "",
                    "if(Ext.isEmpty(id)){",
                    "    Ext.Msg.show({",
                    "     title:'',",
                    "     msg: 'Please select a record to update.',",
                    "     buttons: Ext.Msg.OK,",
                    "     icon: Ext.Msg.WARNING",
                    "   });",
                    "} else {",
                    "    if(field1.isValid() && field2.isValid()){",
                    "    user = {",
                    "        \"userId\":id,",
                    "        \"userFname\":fname,",
                    "        \"userLname\":lname,",
                    "        \"userEmail\":email,",
                    "        \"userPass\":pass,",
                    "        \"userOccupation\":occupation,",
                    "        \"userAddress1\":address1,",
                    "        \"userAddress2\":address2,",
                    "        \"userCity\":city,",
                    "        \"userSp\":sp,",
                    "        \"userCountry\":country,",
                    "        \"userType\":accountType,",
                    "        \"userLevel\":userLevel",
                    "    };",
                    "    Ext.Ajax.request({",
                    "        url : \"updateUserByAdmin\",",
                    "        method: 'POST',",
                    "        params : {",
                    "            user: Ext.encode(user)",
                    "        },",
                    "        async: false,",
                    "        jsonData: Ext.util.JSON.encode(user),",
                    "        callback : function(options, success, response){",
                    "            if(response.responseText===''){",
                    "                Ext.Msg.alert(\"Update User\", \"Error encountered in updating user.\");",
                    "            }else {",
                    "                Ext.Msg.alert(\"Update User\", \"User information successfully updated.\");",
                    "                Ext.getCmp('userField').setValue(user.userFname);",
                    "                Ext.getCmp('idField').setValue(user.userId);",
                    "                if(Ext.isEmpty(user.userAddress2)){",
                    "                    Ext.getCmp('addField').setValue(user.userAddress1 + ', ' + user.userCity + ', ' + user.userSp + ', ' + user.userCountry);",
                    "                }else{",
                    "                    Ext.getCmp('addField').setValue(user.userAddress1 + ', ' + user.userAddress2 + ', ' + user.userCity + ', ' + user.userSp + ', ' + user.userCountry);",
                    "                }",
                    "                Ext.getCmp('emailField').setValue(user.userEmail);",
                    "                Ext.getCmp('levelField').setValue(user.userLevel);",
                    "                controller.userRefresh();",
                    "                controller.userResetFormValues();",
                    "            }",
                    "        }",
                    "    });",
                    "}else{",
                    "    Ext.Msg.alert(\"Update User\", \"Validation error. Please check the field values.\");",
                    "}",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onUserMgmtUpdateClick",
            "designerId": "88b026d6-c739-4f5a-9aa7-61f82e913ffd"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtDelete",
                "designer|targetType": "MyButton25",
                "fn": "onUserMgmtDeleteClick",
                "implHandler": [
                    "var controller = W5D5_Project.app.getController('UserMgmtController');",
                    "var store = Ext.getStore('UserStore');",
                    "var id = Ext.getCmp('userMgmtId').getValue();",
                    "var record = '';",
                    "if(Ext.isEmpty(id)){",
                    "    Ext.Msg.show({",
                    "     title:'',",
                    "     msg: 'Please select a record to delete.',",
                    "     buttons: Ext.Msg.OK,",
                    "     icon: Ext.Msg.WARNING",
                    "   });",
                    "}else{",
                    "    Ext.each(store.data.items, function(rec){",
                    "       if(rec.data.userId == id){",
                    "       record = rec;",
                    "    }",
                    " });",
                    "    if(!Ext.isEmpty(record)){",
                    "     Ext.Ajax.request({",
                    "        url : 'deleteUser',",
                    "        method : 'POST',",
                    "        params : {",
                    "            id : id",
                    "        },",
                    "        callback : function(options, success, response){",
                    "            if(!Ext.isEmpty(response.responseText)){",
                    "                console.log(\"success!\");",
                    "            }",
                    "        }",
                    "    });",
                    "    store.remove(record);",
                    "    Ext.Msg.alert('Success', 'User successfully deleted');",
                    "    controller.userRefresh();",
                    "}",
                    "controller.userResetFormValues();",
                    "}"
                ],
                "name": "click",
                "scope": "me"
            },
            "name": "onUserMgmtDeleteClick",
            "designerId": "a598ebf2-22b9-4ec7-b3dc-128df66844e9"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtGrid",
                "designer|targetType": "Ext.grid.Panel",
                "fn": "onUserMgmtGridSelectionChange",
                "implHandler": [
                    "     if(!Ext.isEmpty(selected)){",
                    "         Ext.getCmp('userMgmtId').setValue(selected[0].data.userId);",
                    "         Ext.getCmp('userMgmtFname').setValue(selected[0].data.userFname);",
                    "         Ext.getCmp('userMgmtLname').setValue(selected[0].data.userLname);",
                    "         Ext.getCmp('userMgmtAdd1').setValue(selected[0].data.userAddress1);",
                    "         Ext.getCmp('userMgmtAdd2').setValue(selected[0].data.userAddress2);",
                    "         Ext.getCmp('userMgmtCountry').setValue(selected[0].data.userCountry);",
                    "         Ext.getCmp('userMgmtSp').setValue(selected[0].data.userSp);",
                    "         Ext.getCmp('userMgmtCity').setValue(selected[0].data.userCity);",
                    "         Ext.getCmp('userMgmtOccup').setValue(selected[0].data.userOccupation);",
                    "         Ext.getCmp('userMgmtEmail').setValue(selected[0].data.userEmail);",
                    "         Ext.getCmp('userMgmtPass').setValue(selected[0].data.userPass);",
                    "         Ext.getCmp('userMgmtLevel').setValue(selected[0].data.userLevel);",
                    "         Ext.getCmp('userMgmtType').setValue(selected[0].data.userType);",
                    "         var pass = Ext.getCmp('userMgmtPass');",
                    "         pass.setReadOnly(true);",
                    "        }else{",
                    "            var controller = W5D5_Project.app.getController('UserMgmtController');",
                    "            controller.userResetFormValues();",
                    "        }"
                ],
                "name": "selectionchange",
                "scope": "me"
            },
            "name": "onUserMgmtGridSelectionChange",
            "designerId": "9de898ac-e666-4f17-81d2-75e43fb5189f"
        },
        {
            "type": "controlleraction",
            "reference": {
                "name": "listeners",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|controlQuery": "#userMgmtSearch",
                "designer|targetType": "MyTextField46",
                "fn": "onUserMgmtSearchChange",
                "implHandler": [
                    "var searchVal = Ext.getCmp('userMgmtSearch').getValue();",
                    "var store = Ext.getStore('UserStore');",
                    "if(Ext.isEmpty(searchVal)){",
                    "    store.clearFilter();",
                    "}else{",
                    "    store.filter('userEmail', searchVal);",
                    "}"
                ],
                "name": "change",
                "scope": "me"
            },
            "name": "onUserMgmtSearchChange",
            "designerId": "2d02b0be-2826-4808-a6f9-b8da4a799218"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "userRefresh",
                "implHandler": [
                    "Ext.Ajax.request({",
                    "    url : \"getAllUsers\",",
                    "    method : \"GET\",",
                    "    async : false,",
                    "    callback : function(options,success,response){",
                    "        if (Ext.isEmpty(response.responseText)) {",
                    "            Ext.Msg.alert(\"Users\",",
                    "                          \"Error in getting users\");",
                    "        } else {",
                    "            var userStore = Ext.getStore('UserStore');",
                    "            var jsonResponse = Ext.JSON.decode(response.responseText);",
                    "            userStore.loadData(jsonResponse);",
                    "        }",
                    "    }",
                    "});"
                ]
            },
            "name": "userRefresh",
            "designerId": "04f794fd-364b-4024-bb2f-0d0914d707e3"
        }
    ]
}