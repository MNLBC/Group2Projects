/*
 * File: app/controller/UserMgmtController.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 5.0.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 5.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('W6D5_Project.controller.UserMgmtController', {
    extend: 'Ext.app.Controller',

    id: 'userMgmtController',

    refs: {
        userInfoGrid: '#userInfoGrid'
    },

    control: {
        "#userCountryCombo": {
            change: 'onUserCountryComboChange'
        },
        "#userInfoGrid": {
            selectionchange: 'onUserInfoGridSelectionChange'
        },
        "#UserMgmtResetBtn": {
            click: 'onUserMgmtResetBtnClick'
        },
        "#userMgmtSearchBtn": {
            click: 'onUserMgmtSearchBtnClick'
        },
        "#UserResetBtn": {
            click: 'onUserResetBtnClick'
        },
        "#userUpdateBtn": {
            click: 'onUserUpdateBtnClick'
        },
        "#userCreateBtn": {
            click: 'onUserCreateBtnClick'
        },
        "#userMgmtCreateBtn": {
            click: 'onUserMgmtCreateBtnClick'
        },
        "#userMgmtDeleteBtn": {
            click: 'onUserMgmtDeleteBtnClick'
        },
        "#userDeleteBtn": {
            click: 'onUserDeleteBtnClick'
        }
    },

    onUserCountryComboChange: function() {
        var state = Ext.getStore('SPStore');
        var country = Ext.getCmp('userCountryCombo').value;
        state.filter('CountryName', country);
    },

    onUserInfoGridSelectionChange: function() {
                var controller = W5D5_Project.app.getController('UserMgmtController');
                var grid = Ext.getCmp('userInfoGrid');
                var selected = grid.getSelectionModel().selected.items[0].data;
                controller.setUserFormValues(selected);
    },

    onUserMgmtResetBtnClick: function() {
                var search = Ext.getCmp('userMgmtSearchField').setValue('');
    },

    onUserMgmtSearchBtnClick: function() {
             var searchVal = Ext.getCmp('userMgmtSearchField').getValue();
             var store = Ext.getStore('UserStore');
                    if(Ext.isEmpty(searchVal)){
                        store.clearFilter();
                    }else{
                        store.filter('userFname', searchVal);
                    }
    },

    onUserResetBtnClick: function() {
                var controller = W5D5_Project.app.getController('UserMgmtController');
                controller.UserResetFormValues();
    },

    onUserUpdateBtnClick: function() {
                var controller = W5D5_Project.app.getController('UserMgmtController');
                var store = Ext.getStore('UserStore');
                var user = controller.getUserFormValues();
                var id = Ext.getCmp('userIdField').getValue();
                var grid = Ext.getCmp('userInfoGrid');

                                if(Ext.isEmpty(id)){
                                    Ext.Msg.show({
                                    title:'',
                                    msg: 'Please select a record to update.',
                                    buttons: Ext.Msg.OK,
                                    icon: Ext.Msg.WARNING
                                });
                                }else{
                                    Ext.each(store.data.items, function(rec){
                    if(rec.data.userId == id){
                        rec.data.userFname = user.userFname;
                        rec.data.userLname = user.userLname;
                        rec.data.userEmail = user.userEmail;
                        rec.data.userAddress1 = user.userAddress1;
                        rec.data.userAddress2 = user.userAddress2;
                        rec.data.userPass = user.userPass;
                        rec.data.userCity = user.userCity;
                        rec.data.userSP = user.userSP;
                        rec.data.userCountry = user.userCountry;
                        rec.data.userType = user.userType;
                    }
                });
                                }




                controller.UserResetFormValues();
                grid.getView().refresh();
    },

    onUserCreateBtnClick: function() {
        var controller = W5D5_Project.app.getController('UserMgmtController');
                var store = Ext.getStore('UserStore');
                var user = controller.getUserFormValues();
                store.add(user);
                controller.UserResetFormValues();
    },

    onUserMgmtCreateBtnClick: function() {
        var userGrid = this.getUserInfoGrid();
        var userStore = userGrid.getStore();

        var userModel = Ext.create('UserManagement.model.UserModel');
        userModel.set("userFname", "First Name");
        userModel.set("userLname", "Last Name");
        userModel.set("userEmail", "Email");
        userModel.set("userPass", "Password");
        userModel.set("userAddress1", "Address 1");
        userModel.set("userAddress2", "Address 2");
        userModel.set("userSP", "State/Province");
        userModel.set("userCity", "City");
        userModel.set("userCountry", "Country");
        userModel.set("userType", "Customer");

        userStore.add(userModel);

        userGrid.editingPlugin.startEdit(userModel, 1);
    },

    onUserMgmtDeleteBtnClick: function() {
                 var userGrid = this.getUserInfoGrid();
                        var userStore = userGrid.getStore();

                        //delete selected rows if selModel is checkboxmodel
                        var selectedRows = userGrid.getSelectionModel().getSelection();

                        if (selectedRows.length)
                            userStore.remove(selectedRows);
                        else
                            Ext.Msg.alert('Status', 'Please select at least one record to delete!');
    },

    onUserDeleteBtnClick: function() {
                        var controller = W5D5_Project.app.getController('UserMgmtController');
                        var store = Ext.getStore('UserStore');
                        var id = Ext.getCmp('userIdField').getValue();

                        if(Ext.isEmpty(id)){
                            Ext.Msg.show({
                            title:'',
                            msg: 'Please select a record to delete.',
                            buttons: Ext.Msg.OK,
                            icon: Ext.Msg.WARNING
                        });
                        }else{
                           Ext.each(store.data.items, function(rec){
                            if(rec.data.userId == id){
                                controller.UserResetFormValues();
                                store.remove(rec);
                            }
                          });
                        }
    },

    setUserFormValues: function(user) {
        Ext.getCmp('userIdField').setValue(user.userId);
        Ext.getCmp('userFnameField').setValue(user.userFname);
        Ext.getCmp('userLnameField').setValue(user.userLname);
        Ext.getCmp('userEmailField').setValue(user.userEmail);
        Ext.getCmp('userPassField').setValue(user.userPass);
        Ext.getCmp('userTypeCombo').setValue(user.userType);
        Ext.getCmp('userAddress1Field').setValue(user.userAddress1);
        Ext.getCmp('userAddress2Field').setValue(user.userAddress2);
        Ext.getCmp('userCityField').setValue(user.userCity);
        Ext.getCmp('userSPCombo').setValue(user.userSP);
        Ext.getCmp('userCountryCombo').setValue(user.userCountry);
    },

    getUserFormValues: function() {
        var store = Ext.getStore('UserStore');
        var userId = Ext.getCmp('userIdField').getValue();
        var userFname = Ext.getCmp('userFnameField').getValue();
        var userLname = Ext.getCmp('userLnameField').getValue();
        var userEmail = Ext.getCmp('userEmailField').getValue();
        var userPass = Ext.getCmp('userPassField').getValue();
        var userAddress1 = Ext.getCmp('userAddress1Field').getValue();
        var userAddress2 = Ext.getCmp('userAddress2Field').getValue();
        var userPass = Ext.getCmp('userPassField').getValue();
        var userCity = Ext.getCmp('userCityField').getValue();
        var userSP = Ext.getCmp('userSPCombo').getValue();
        var userCountry = Ext.getCmp('userCountryCombo').getValue();
        var userType = Ext.getCmp('userTypeCombo').getValue();


        if (store.getCount() > 0)
        {
            var maxId = store.getAt(0).get('userId'); // initialise to the first record's id value.
            store.each(function(rec) // go through all the records
                       {
                           maxId = Math.max(maxId, rec.get('userId'));
                       });
        }

        userId = maxId + 1;


        var user = {
            "userId":userId,
            "userFname":userFname,
            "userLname":userLname,
            "userEmail":userEmail,
            "userAddress1":userAddress1,
            "userAddress2":userAddress2,
            "userPass":userPass,
            "userCity":userCity,
            "userSP":userSP,
            "userCountry":userCountry,
            "userType":userType
        };

        return user;
    },

    UserResetFormValues: function() {
                Ext.getCmp('userIdField').setValue('');
                Ext.getCmp('userFnameField').setValue('');
                Ext.getCmp('userLnameField').setValue('');
                Ext.getCmp('userEmailField').setValue('');
                Ext.getCmp('userAddress1Field').setValue('');
                Ext.getCmp('userAddress2Field').setValue('');
                Ext.getCmp('userCityField').setValue('');
                Ext.getCmp('userSPCombo').setValue('');
                Ext.getCmp('userCountryCombo').setValue('');
                Ext.getCmp('userPassField').setValue('');
                Ext.getCmp('userTypeCombo').setValue('');
    }

});
